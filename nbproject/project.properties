auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.eclipseFormatterActiveProfile=
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.eclipseFormatterEnabled=false
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.eclipseFormatterLocation=
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.enableFormatAsSaveAction=false
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.preserveBreakPoints=true
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.showNotifications=true
auxiliary.de-markiewb-netbeans-plugins-eclipse-formatter.useProjectSettings=false
#Mon Nov 17 16:13:47 MSK 2014
excludes=
jar.archive.disabled=${jnlp.enabled}
jar.index=${jnlp.enabled}
javac.deprecation=false
build.test.results.dir=${build.dir}/test/results
jaxbwiz.gensrc.classpath=${libs.jaxb.classpath}
jaxbwiz.xjcdef.classpath=${libs.jaxb.classpath}
jaxbwiz.xjcrun.classpath=${libs.jaxb.classpath}
jmx.jconsole.plugins.path=
jmx.jconsole.enabled=true
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
run.classpath=${javac.classpath}\:${build.classes.dir}
javadoc.nonavbar=false
run.test.classpath=${javac.test.classpath}\:${build.test.classes.dir}
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
javac.processorpath=${javac.classpath}
jmx.rmi.enabled=false
javac.target=1.8
annotation.processing.processors.list=
javadoc.noindex=false
javadoc.additionalparam=
includes=**
build.classes.dir=${build.dir}/classes
source.encoding=UTF-8
javadoc.author=false
test.src.dir=test
jmx.rmi.use.port=true
build.dir=build
build.test.classes.dir=${build.dir}/test/classes
platform.active=default_platform
javac.compilerargs=
dist.jar=${dist.dir}/jmokko.jar
javac.test.processorpath=${javac.test.classpath}
javadoc.use=true
native.bundling.enabled=true
dist.archive.excludes=
build.sysclasspath=ignore
debug.test.classpath=${run.test.classpath}
dist.dir=dist
build.classes.excludes=**/*.java,**/*.form
javadoc.splitindex=true
javadoc.encoding=${source.encoding}
jmx.jconsole.use.classpath=true
javac.source=1.8
application.vendor=psyriccio
jmx.config.file=
debug.classpath=${run.classpath}
jmx.jconsole.period=4
jmx.jconsole.classpath.plugins=true
run.jvmargs=
jmx.rmi.port=1099
build.generated.dir=${build.dir}/generated
jar.compress=false
javac.test.classpath=${javac.classpath}\:${build.classes.dir}\:${libs.junit_4.classpath}
javadoc.private=false
annotation.processing.run.all.processors=true
application.title=jmokko
meta.inf.dir=${src.dir}/META-INF
annotation.processing.enabled=true
dist.javadoc.dir=${dist.dir}/javadoc
src.dir=src
mkdist.disabled=true
endorsed.classpath=\
    ${libs.JAXB-ENDORSED.classpath}
javac.classpath=\
    ${libs.Reflections.classpath}:\
    ${libs.HawtBuf.classpath}:\
    ${libs.SwingX.classpath}:\
    ${libs.jaxb.classpath}:\
    ${libs.spring-framework400.classpath}:\
    ${libs.aopalliance.classpath}:\
    ${libs.log4j_2.0.classpath}:\
    ${libs.XStream.classpath}:\
    ${libs.XStream Hibernate.classpath}:\
    ${libs.Google_Guava.classpath}:\
    ${libs.XStream_Hibernate.classpath}:\
    ${libs.jcabi.http.client.classpath}
annotation.processing.enabled.in.editor=false
build.generated.sources.dir=${build.dir}/generated-sources
javadoc.version=false
javadoc.windowtitle=
javadoc.notree=false
